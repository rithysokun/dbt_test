
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_test'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_test'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]

# Path to 'aggregate sql files', these file will be compiled but not executed . 
analysis-paths: ["analyses"]

# path to validation files
test-paths: ["tests"]

# Path to csv file . Seed can be referenced downstream model the same way as model using ref()
seed-paths: ["seeds"]

# Path to Macro in Jinja . AKA "Function" in programming language 
macro-paths: ["macros"]

#path to snapshot (point-in-time copy of current data state)
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  dbt_test:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
